name: Release

on:
  push:
    branches:
      - main

jobs:
  prepare:
    runs-on: ubuntu-latest
    if: "! contains(github.event.head_commit.message, '[skip ci]')"
    steps:
      - run: echo "${{ github.event.head_commit.message }}"

  lint:
    needs: prepare
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: setup node
        uses: actions/setup-node@v2
        with:
          node-version: '14'
          check-latest: true
      - name: Install dependencies
        env:
          CI: true
        run: npm ci
      - name: Lint
        run: npm run lint

  test:
    needs: lint
    name: Unit test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: '14'
          check-latest: true
      - name: Install dependencies
        env:
          CI: true
        run: npm ci
      - name: Unit Test
        run: npm run test:unit -- --ci --coverage
      - name: Send Coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          directory: ./coverage/
          flags: unittests
          verbose: true

  publish:
    name: Publish
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: setup node
        uses: actions/setup-node@v2
        with:
          node-version: '14'
          check-latest: true
          registry-url: https://registry.npmjs.org
      - name: Install
        env:
          CI: true
        run: npm ci
      - name: Compile
        run: npm run dist
      - name: Publish
        if: success()
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: npx semantic-release
