var fledge=function(){"use strict";let e=[];const o={},r="%c ";function t(t){return function(...n){const s=[],i=[];n.forEach((t=>{if(t===o){const o=e.shift();s.push(`%c${o.value}`,r),i.push(o.css,"")}else"object"==typeof t||"function"==typeof t?(s.push("%o",r),i.push(t,"")):(s.push(`%c${t}`,r),i.push("",""))})),t(s.join(""),...i),e=[]}}const n={assert:t(console.assert),clear:t(console.clear),count:t(console.count),countReset:t(console.countReset),debug:t(console.debug),dir:t(console.dir),error:t(console.error),group:t(console.group),groupCollapsed:t(console.groupCollapsed),groupEnd:t(console.groupEnd),info:t(console.info),log:t(console.log),table:t(console.table),time:t(console.time),timeEnd:t(console.timeEnd),timeLog:t(console.timeLog),trace:t(console.trace),warn:t(console.warn),asAlert:function(r){return e.push({value:r,css:"display: inline-block; background-color: #dc3545; color: #ffffff; font-weight: bold; padding: 3px 7px 3px 7px; border-radius: 3px 3px 3px 3px;"}),o},asInfo:function(r){return e.push({value:r,css:"color: #0366d6; font-weight: bold;"}),o},asProcess:function(r){return e.push({value:`${r}â€¦`,css:"color: #8c8c8c; font-style: italic;"}),o},asSuccess:function(r){return e.push({value:r,css:"color: #289d45; font-weight: bold;"}),o},asWarning:function(r){return e.push({value:r,css:"display: inline-block; background-color: #ffc107; color: black; font-weight: bold; padding: 3px 7px 3px 7px; border-radius: 3px 3px 3px 3px;"}),o}},s=(e,o,r)=>o.map((o=>`'${o}' requires a type of "${r[o]}"! A type of ${typeof e[o]} was provided instead.`)),i={array:e=>"undefined"!==e&&Array.isArray(e),number:e=>"undefined"!==e&&"number"==typeof e,object:e=>"undefined"!==e&&"object"==typeof e&&null!==e&&!Array.isArray(e),string:e=>"undefined"!==e&&"string"==typeof e,mixed:e=>"undefined"!==e&&(Array.isArray(e)||"string"==typeof e),url:e=>{try{return Boolean(new URL(e))}catch(e){return!1}}},a=(e,o)=>new Promise(((r,t)=>{const n=t=>{o(t)&&(e.removeEventListener("message",n),e.removeEventListener("messageerror",s),r(t))},s=r=>{o(r)&&(e.removeEventListener("message",n),e.removeEventListener("messageerror",s),t(new Error("Message deserialization error")))};e.addEventListener("message",n),e.addEventListener("messageerror",s)}));const u=({source:e,target:o=document.body,props:r={},style:t={}})=>{if(!e)throw new Error("Something went wrong! No URL was found.");const n=new URL(e,document.baseURI),s=document.createElement("iframe"),i={src:n,scrolling:"no",...r},a={"border-width":0,...t};return Object.entries(i).map((([e,o])=>s.setAttribute(e,o))),Object.entries(a).map((([e,o])=>s.style.setProperty(e,o))),o.appendChild(s),{iframe:s,origin:n.origin}},g={getFramePort:async function(e,o,r){r&&n.groupCollapsed("message utils: getFromPort"),r&&n.log(n.asProcess("getting message from iframe"));const{data:t,ports:s,origin:i}=await a(window,(({source:o})=>o===e.contentWindow));if(i!==o)throw new Error(`Message origins are mismatched! Expected ${o}, received ${i}`);if(1!==t["fledge.polyfill"])throw new Error(`Message versions are mismatched! Expected 1, but received ${t["fledge.polyfill"]}`);if(1!==s.length)throw new Error(`Message ports are mismatched! Expected 1 port, received ${s.length}`);return r&&n.groupEnd(),s[0]},getFromFrame:function(e,o){o&&n.groupCollapsed("message utils: getFromFrame"),o&&n.log(n.asProcess("getting message from iframe"));const r=a(e,(()=>!0));return e.start(),o&&n.log(n.asSuccess("grabbed message from iframe, started port")),o&&n.groupEnd(),r},get:a},d=(e,o)=>{const r=Object.entries(e).filter((([e,r])=>!i[o[e]](r))).flatMap((([e])=>e));if(r.length)throw new Error(s(e,r,o).join(". "));return!1},l=(e,o)=>{const r=o.filter((o=>!e.hasOwnProperty(o)));if(r.length)throw new Error(`Required options are missing! You must provide an 'object' of options with all of the following required options: ${r.join(", ")}.`);return!1},c=(e,o)=>{if(!i[o](e))throw new Error(`Must be of type "${o}"! ${typeof e} was provided.`)};async function p(e,o,r){r&&n.groupCollapsed("Fledge API: renderAd");const t=document.querySelector(e);if(!t)throw new Error(`Target not found on the page! Please check that ${t} exists on the page.`);r&&n.log(n.asInfo("target:"),t);const s=JSON.parse(sessionStorage.getItem(o));if(!s)throw new Error(`A token was not found! Token provided: ${o}`);if(r&&n.log(n.asInfo("winner data:"),s),r&&n.log(n.asProcess("checking that winner to be rendered is on the same hostname as the auction")),s?.origin!==`${window.top.location.origin}${window.top.location.pathname}`)throw r&&n.error("Attempting to render the winner on a location that doesn't match the auctions hostname",{winner:s.origin,auction:`${window.top.location.origin}${window.top.location.pathname}`}),new Error("Something went wrong! No ad was rendered.");r&&n.log(n.asSuccess("winner is on the same hostname as the auction")),r&&n.log(n.asProcess("rendering an iframe with the winning ad")),u({source:s.bid.render,target:t,props:{id:`fledge-auction-${o}`}});const i=document.querySelector(`#fledge-auction-${o}`);if(!i)throw new Error("Something went wrong! No ad was rendered.");r&&n.log(n.asSuccess("iframe with winning ad has rendered")),r&&n.log(n.asInfo("ads target:"),i),r&&n.groupEnd(),r&&n.groupCollapsed("Fledge API: Reporting");const a=await(async(e,o,r)=>{r&&n.groupCollapsed("render utils: getSellerReport");const{report_result:t,reportResult:s}=await import(e.decision_logic_url);let i,a=s;if(t&&(a=t),!a||"function"!=typeof a)return r&&n.log(n.asWarning("No 'reportResult' function found!")),r&&n.groupEnd(),null;try{r&&n.log(n.asProcess("fetching seller reporting")),i=a(e,{top_window_hostname:window.top.location.hostname,interest_group_owner:o.bid.owner,interest_group_name:o.bid.name,render_url:o.bid.render,bid:o.bid.bid}),r&&n.log(n.asSuccess("report found"))}catch(e){return n.log(n.asAlert(e)),r&&n.groupEnd(),null}return r&&n.groupEnd(),i})(s.conf,s,r);r&&n.log(n.asSuccess("sellers report:"),a);const g=await(async(e,o,r,t)=>{t&&n.groupCollapsed("render utils: getBuyerReport");const s=import(o.bid.bidding_logic_url).then((({reportWin:s,report_win:i})=>{let a,u=s;if(i&&(u=i),!u||"function"!=typeof u)return t&&n.log(n.asWarning("No 'reportWin' function found!")),null;try{t&&n.log(n.asProcess("fetching buyer reporting")),a=u(e?.auction_signals,e?.per_buyer_signals?.[o.bid.owner],r,{top_window_hostname:window.top.location.hostname,interest_group_owner:o.bid.owner,interest_group_name:o.bid.name,render_url:o.bid.render,bid:o.bid.bid}),t&&n.log(n.asSuccess("report found"))}catch(e){n.log(n.asAlert("There was an error in the 'reportWin' function:")),n.log(e),a=null}return a})).catch((e=>(n.log(n.asAlert(e)),null)));return t&&n.groupEnd(),s})(s.conf,s,a,r);return r&&n.log(n.asSuccess("buyers report:"),g),r&&n.groupEnd(),!0}const h={seller:"string",decision_logic_url:"url",interest_group_buyers:"mixed",trusted_scoring_signals_url:"url",additional_bids:"array",auction_signals:"object",seller_signals:"object",per_buyer_signals:"object"},f={owner:"string",name:"string",bidding_logic_url:"url",daily_update_url:"url",trusted_bidding_signals_url:"url",trusted_bidding_signals_keys:"array",user_bidding_signals:"object",ads:"array"},m=2592e6;return class{constructor(e,o){this.url=e||"http://localhost:8000/iframe.html",this._debug=o;const r=this._debug?"?debug=true":"",{iframe:t,origin:n}=u({source:`${this.url}${r}`,style:{display:"none"}}),s=g.getFramePort(t,n);this._props={iframe:t,port:s}}set props(e){this._props=e}get props(){return this._props}async joinAdInterestGroup(e,o){if(this._debug&&n.group("Fledge: Join an Interest Group"),this._debug&&n.log(n.asInfo("interest group options:"),e),this._debug&&n.log(n.asInfo("interest group expiration:"),`${o}: (human-readable: ${new Date(Date.now()+o).toLocaleString()})`),c(e,"object"),c(o,"number"),l(e,["owner","name","bidding_logic_url"]),d(e,f),o>m)throw new Error("'expiry' is set past the allowed maximum value. You must provide an expiration that is less than or equal to 2592000000.");this._debug&&n.groupCollapsed("message channel");const r=await this.props.port;return this._debug&&n.log(n.asInfo("message port:"),r),this._debug&&n.groupEnd(),this._debug&&n.log(n.asProcess("sending 'joinAdInterestGroup' message to iframe")),r.postMessage(["joinAdInterestGroup",[e,o,this._debug]]),this._debug&&n.groupEnd(),!0}async leaveAdInterestGroup(e){this._debug&&n.group("Fledge: Leave an Interest Group"),this._debug&&n.log(n.asInfo("interest group:"),e),c(e,"object"),l(e,["owner","name"]),d(e,f),this._debug&&n.groupCollapsed("message channel");const o=await this.props.port;return this._debug&&n.log(n.asInfo("message port:"),o),this._debug&&n.groupEnd(),this._debug&&n.log(n.asProcess("sending 'leaveAdInterestGroup' message to iframe")),o.postMessage(["leaveAdInterestGroup",[e,this._debug]]),this._debug&&n.groupEnd(),!0}async runAdAuction(e){this._debug&&n.group("Fledge: Auction"),this._debug&&n.log(n.asInfo("auction config:"),e),c(e,"object"),l(e,["seller","decision_logic_url","interest_group_buyers"]),d(e,h),this._debug&&n.groupCollapsed("message channel");const o=await this.props.port;this._debug&&n.log(n.asInfo("message port:"),o);const{port1:r,port2:t}=new MessageChannel;this._debug&&n.log(n.asInfo("message channel receiver:"),r),this._debug&&n.log(n.asInfo("message channel sender:"),t),this._debug&&n.groupEnd();try{this._debug&&n.log(n.asProcess("sending 'runAdAuction' message to iframe")),o.postMessage(["runAdAuction",[e,this._debug]],[t]);const{data:s}=await g.getFromFrame(r,this._debug);if(!s[0])throw new Error("No data found!");this._debug&&n.log(n.asInfo("message data:"),s);const[,i]=s;return this._debug&&n.log(n.asSuccess("auction token:"),i),i}finally{r.close(),this._debug&&n.groupEnd()}}async renderAd(e,o){return this._debug&&n.group("Fledge: Render an Ad"),this._debug&&n.log(n.asInfo("ad slot selector:"),e),this._debug&&n.log(n.asInfo("winning ad token:"),o),c(e,"string"),c(o,"string"),await p(e,o,this._debug),this._debug&&n.log(n.asSuccess("winning ad rendered")),this._debug&&n.groupEnd(),!0}}}();
