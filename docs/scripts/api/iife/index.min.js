var fledge=function(){"use strict";const e=(e,r,t)=>r.map((r=>`'${r}' requires a type of "${t[r]}"! A type of ${typeof e[r]} was provided instead.`)),r={array:e=>"undefined"!==e&&Array.isArray(e),number:e=>"undefined"!==e&&"number"==typeof e,object:e=>"undefined"!==e&&"object"==typeof e&&null!==e&&!Array.isArray(e),string:e=>"undefined"!==e&&"string"==typeof e,mixed:e=>"undefined"!==e&&(Array.isArray(e)||"string"==typeof e),url:e=>{try{return Boolean(new URL(e))}catch(e){return!1}}},t=(e,r)=>new Promise(((t,n)=>{const o=n=>{r(n)&&(e.removeEventListener("message",o),e.removeEventListener("messageerror",i),t(n))},i=t=>{r(t)&&(e.removeEventListener("message",o),e.removeEventListener("messageerror",i),n(new Error("Message deserialization error")))};e.addEventListener("message",o),e.addEventListener("messageerror",i)}));const n=({source:e,target:r=document.body,props:t={},style:n={}})=>{if(!e)throw new Error("Something went wrong! No URL was found.");const o=new URL(e,document.baseURI),i=document.createElement("iframe"),s={src:o,scrolling:"no",...t},a={"border-width":0,...n};return Object.entries(s).map((([e,r])=>i.setAttribute(e,r))),Object.entries(a).map((([e,r])=>i.style.setProperty(e,r))),r.appendChild(i),{iframe:i,origin:o.origin}},o={getFramePort:async function(e,r){const{data:n,ports:o,origin:i}=await t(window,(({source:r})=>r===e.contentWindow));if(i!==r)throw new Error(`Message origins are mismatched! Expected ${r}, received ${i}`);if(1!==n["fledge.polyfill"])throw new Error(`Message versions are mismatched! Expected 1, but received ${n["fledge.polyfill"]}`);if(1!==o.length)throw new Error(`Message ports are mismatched! Expected 1 port, received ${o.length}`);return o[0]},getFromFrame:function(e){const r=t(e,(()=>!0));return e.start(),r},get:t},i=(t,n)=>{const o=Object.entries(t).filter((([e,t])=>!r[n[e]](t))).flatMap((([e])=>e));if(o.length)throw new Error(e(t,o,n).join(". "));return!1},s=(e,r)=>{const t=r.filter((r=>!e.hasOwnProperty(r)));if(t.length)throw new Error(`Required options are missing! You must provide an 'object' of options with all of the following required options: ${t.join(", ")}.`);return!1},a=(e,t)=>{if(!r[t](e))throw new Error(`Must be of type "${t}"! ${typeof e} was provided.`)};async function d(e,r){const t=document.querySelector(e);if(!t)throw new Error(`Target not found on the page! Please check that ${t} exists on the page.`);const o=JSON.parse(sessionStorage.getItem(r));if(!o)throw new Error(`A token was not found! Token provided: ${r}`);if(o?.origin!==`${window.top.location.origin}${window.top.location.pathname}`)throw new Error("Something went wrong! No ad was rendered.");n({source:o.bid.render,target:t,props:{id:`fledge-auction-${r}`}});if(!document.querySelector(`#fledge-auction-${r}`))throw new Error("Something went wrong! No ad was rendered.");const i=await(async(e,r)=>{const{reportResult:t}=await import(e.decisionLogicUrl);if(!t||"function"!=typeof t)return null;let n;try{n=t(e,{topWindowHostname:window.top.location.hostname,interestGroupOwner:r.bid.owner,interestGroupName:r.bid.name,renderUrl:r.bid.render,bid:r.bid.bid})}catch(e){return null}return n})(o.conf,o);await(async(e,r,t)=>import(r.bid.biddingLogicUrl).then((({reportWin:n})=>{if(!n||"function"!=typeof n)return null;let o;try{o=n(e?.auctionSignals,e?.perBuyerSignals?.[r.bid.owner],t,{topWindowHostname:window.top.location.hostname,interestGroupOwner:r.bid.owner,interestGroupName:r.bid.name,renderUrl:r.bid.render,bid:r.bid.bid})}catch(e){o=null}return o})).catch((e=>{throw new Error(e)})))(o.conf,o,i)}const c={seller:"string",decisionLogicUrl:"url",interestGroupBuyers:"mixed",trustedScoringSignalsUrl:"url",additionalBids:"array",auctionSignals:"object",sellerSignals:"object",perBuyerSignals:"object"},l={owner:"string",name:"string",biddingLogicUrl:"url",dailyUpdateUrl:"url",trustedBiddingSignalsUrl:"url",trustedBiddingSignalsKeys:"array",userBiddingSignals:"object",ads:"array"},u=2592e6;return class{constructor(e){this.url=e||"http://localhost:8000/iframe.html";const{iframe:r,origin:t}=n({source:this.url,style:{display:"none"}}),i=o.getFramePort(r,t);this._props={iframe:r,port:i}}set props(e){this._props=e}get props(){return this._props}async joinAdInterestGroup(e,r){if(a(e,"object"),a(r,"number"),s(e,["owner","name","biddingLogicUrl"]),i(e,l),r>u)throw new Error("'expiry' is set past the allowed maximum value. You must provide an expiration that is less than or equal to 2592000000.");(await this.props.port).postMessage(["joinAdInterestGroup",[e,r]])}async leaveAdInterestGroup(e){a(e,"object"),s(e,["owner","name"]),i(e,l);(await this.props.port).postMessage(["leaveAdInterestGroup",[e]])}async runAdAuction(e){a(e,"object"),s(e,["seller","decisionLogicUrl","interestGroupBuyers"]),i(e,c);const r=await this.props.port,{port1:t,port2:n}=new MessageChannel;try{r.postMessage(["runAdAuction",[e]],[n]);const{data:i}=await o.getFromFrame(t);if(!i[0])throw new Error("No data found!");const[,s]=i;return s}finally{t.close()}}async renderAd(e,r){a(e,"string"),a(r,"string"),await d(e,r)}}}();
