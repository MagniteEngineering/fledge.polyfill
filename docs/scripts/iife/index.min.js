var fledgeframe=function(){"use strict";let e=[];const n={},t="%c ";function o(o){return function(...r){const s=[],a=[];r.forEach((o=>{if(o===n){const n=e.shift();s.push(`%c${n.value}`,t),a.push(n.css,"")}else"object"==typeof o||"function"==typeof o?(s.push("%o",t),a.push(o,"")):(s.push(`%c${o}`,t),a.push("",""))})),o(s.join(""),...a),e=[]}}const r={assert:o(console.assert),clear:o(console.clear),count:o(console.count),countReset:o(console.countReset),debug:o(console.debug),dir:o(console.dir),error:o(console.error),group:o(console.group),groupCollapsed:o(console.groupCollapsed),groupEnd:o(console.groupEnd),info:o(console.info),log:o(console.log),table:o(console.table),time:o(console.time),timeEnd:o(console.timeEnd),timeLog:o(console.timeLog),trace:o(console.trace),warn:o(console.warn),asAlert:function(t){return e.push({value:t,css:"display: inline-block; background-color: #dc3545; color: #ffffff; font-weight: bold; padding: 3px 7px 3px 7px; border-radius: 3px 3px 3px 3px;"}),n},asInfo:function(t){return e.push({value:t,css:"color: #0366d6; font-weight: bold;"}),n},asProcess:function(t){return e.push({value:`${t}â€¦`,css:"color: #8c8c8c; font-style: italic;"}),n},asSuccess:function(t){return e.push({value:t,css:"color: #289d45; font-weight: bold;"}),n},asWarning:function(t){return e.push({value:t,css:"display: inline-block; background-color: #ffc107; color: black; font-weight: bold; padding: 3px 7px 3px 7px; border-radius: 3px 3px 3px 3px;"}),n}};let s,a;const i=new WeakMap,c=new WeakMap,l=new WeakMap,u=new WeakMap,d=new WeakMap;let g={get(e,n,t){if(e instanceof IDBTransaction){if("done"===n)return c.get(e);if("objectStoreNames"===n)return e.objectStoreNames||l.get(e);if("store"===n)return t.objectStoreNames[1]?void 0:t.objectStore(t.objectStoreNames[0])}return w(e[n])},set:(e,n,t)=>(e[n]=t,!0),has:(e,n)=>e instanceof IDBTransaction&&("done"===n||"store"===n)||n in e};function p(e){return e!==IDBDatabase.prototype.transaction||"objectStoreNames"in IDBTransaction.prototype?(a||(a=[IDBCursor.prototype.advance,IDBCursor.prototype.continue,IDBCursor.prototype.continuePrimaryKey])).includes(e)?function(...n){return e.apply(h(this),n),w(i.get(this))}:function(...n){return w(e.apply(h(this),n))}:function(n,...t){const o=e.call(h(this),n,...t);return l.set(o,n.sort?n.sort():[n]),w(o)}}function f(e){return"function"==typeof e?p(e):(e instanceof IDBTransaction&&function(e){if(c.has(e))return;const n=new Promise(((n,t)=>{const o=()=>{e.removeEventListener("complete",r),e.removeEventListener("error",s),e.removeEventListener("abort",s)},r=()=>{n(),o()},s=()=>{t(e.error||new DOMException("AbortError","AbortError")),o()};e.addEventListener("complete",r),e.addEventListener("error",s),e.addEventListener("abort",s)}));c.set(e,n)}(e),n=e,(s||(s=[IDBDatabase,IDBObjectStore,IDBIndex,IDBCursor,IDBTransaction])).some((e=>n instanceof e))?new Proxy(e,g):e);var n}function w(e){if(e instanceof IDBRequest)return function(e){const n=new Promise(((n,t)=>{const o=()=>{e.removeEventListener("success",r),e.removeEventListener("error",s)},r=()=>{n(w(e.result)),o()},s=()=>{t(e.error),o()};e.addEventListener("success",r),e.addEventListener("error",s)}));return n.then((n=>{n instanceof IDBCursor&&i.set(n,e)})).catch((()=>{})),d.set(n,e),n}(e);if(u.has(e))return u.get(e);const n=f(e);return n!==e&&(u.set(e,n),d.set(n,e)),n}const h=e=>d.get(e);const y=["get","getKey","getAll","getAllKeys","count"],b=["put","add","delete","clear"],m=new Map;function E(e,n){if(!(e instanceof IDBDatabase)||n in e||"string"!=typeof n)return;if(m.get(n))return m.get(n);const t=n.replace(/FromIndex$/,""),o=n!==t,r=b.includes(t);if(!(t in(o?IDBIndex:IDBObjectStore).prototype)||!r&&!y.includes(t))return;const s=async function(e,...n){const s=this.transaction(e,r?"readwrite":"readonly");let a=s.store;return o&&(a=a.index(n.shift())),(await Promise.all([a[t](...n),r&&s.done]))[0]};return m.set(n,s),s}g=(e=>({...e,get:(n,t,o)=>E(n,t)||e.get(n,t,o),has:(n,t)=>!!E(n,t)||e.has(n,t)}))(g);const I="interest-groups",_=function(e,n,{blocked:t,upgrade:o,blocking:r,terminated:s}={}){const a=indexedDB.open(e,n),i=w(a);return o&&a.addEventListener("upgradeneeded",(e=>{o(w(a.result),e.oldVersion,e.newVersion,w(a.transaction))})),t&&a.addEventListener("blocked",(()=>t())),i.then((e=>{s&&e.addEventListener("close",(()=>s())),r&&e.addEventListener("versionchange",(()=>r()))})).catch((()=>{})),i}("Fledge",1,{upgrade(e){const n=e.createObjectStore(I,{keyPath:"_key"});["owner","name","_expired"].forEach((e=>{n.createIndex(e,e,{unique:!1})}))}});var v={db:_,store:{add:async function(e,n){return(await _).add(e,{...n,_created:Date.now(),_updated:Date.now()})},get:async function(e,n){const t=(await _).get(e,n);return t||null},getAll:async function(e){const n=(await _).getAll(e);return n||null},put:async function(e,n,t){const o={...n,...t,_updated:Date.now()};return(await _).put(e,o)},delete:async function(e,n){return(await _).delete(e,n)}}};const A=async(e,n,t)=>{t&&r.groupCollapsed("auction utils: getTrustedSignals");const o=`hostname=${window.top.location.hostname}`;if(!e||!n)return t&&r.log(r.asWarning("No 'url' or 'keys' found!")),void(t&&r.groupEnd());const s=await fetch(`${e}?${o}&keys=${n.join(",")}`).then((e=>{if(!e.ok)throw new Error("Something went wrong! The response returned was not ok.");if(!(e=>/\bapplication\/json\b/.test(e?.headers?.get("content-type")))(e))throw new Error("Response was not in the format of JSON.");return e.json()})).catch((e=>(t&&r.log(r.asAlert("There was a problem with your fetch operation:")),t&&r.log(e),null))),a={};for(const[e,t]of s)n.includes(e)&&(a[e]=t);return a&&0===Object.keys(a).length&&a.constructor===Object?(t&&r.groupEnd(),a):(t&&r.log(r.asWarning("No signals found!")),t&&r.groupEnd(),null)};async function x(e,n){n&&r.groupCollapsed("Fledge API: runAdAuction");const t=await v.store.getAll(I);n&&r.log(r.asInfo("all interest groups:"),t);const o=((e,n,t)=>{if(t&&r.groupCollapsed("auction utils: getEligible"),"*"===n)return t&&r.info("using the wildcard yields all groups"),t&&r.groupEnd(),e;const o=e.filter((({owner:e})=>n.includes(e)));return o.length?(t&&r.info("found some eligible buyers"),t&&r.groupEnd(),o):(t&&r.log(r.asWarning("No groups were eligible!")),t&&r.groupEnd(),null)})(t,e.interest_group_buyers,n);if(n&&r.log(r.asInfo('eligible buyers based on "interest_group_buyers":'),o),!o)return n&&r.log(r.asAlert("No eligible interest group buyers found!")),null;const s=await(async(e,n,t)=>Promise.all(e.map((async e=>{t&&r.groupCollapsed(`auction utils: getBids => ${e._key}`);const o=performance.now(),{generateBid:s,generate_bid:a}=await import(e.bidding_logic_url);let i=s;if(a&&(i=a),!i&&"function"!=typeof i)return t&&r.log(r.asWarning("No 'generateBid' function found!")),t&&r.groupEnd(),null;const c=await A(e?.trusted_bidding_signals_url,e?.trusted_bidding_signals_keys,t);let l;try{l=i(e,n?.auction_signals,n?.per_buyer_signals?.[e.owner],c,{top_window_hostname:window.top.location.hostname,seller:n.seller}),t&&r.log(r.asInfo("bid:"),l)}catch(e){return t&&r.log(r.asAlert("There was an error in the 'generateBid' function:")),t&&r.log(e),null}if(!(l.ad&&"object"==typeof l.ad&&l.bid&&"number"==typeof l.bid&&l.render)||"string"!=typeof l.render&&!Array.isArray(l.render))return t&&r.log(r.asWarning("No bid found!")),t&&r.groupEnd(),null;const u=performance.now();return t&&r.groupEnd(),{...e,...l,duration:u-o}}))))(o,e,n);n&&r.log(r.asInfo("all bids from each buyer:"),s);const a=s.filter((e=>e));if(n&&r.log(r.asInfo("filtered bids:"),a),!a.length)return n&&r.log(r.asAlert("No bids found!")),n&&r.groupEnd(),null;n&&r.log(r.asProcess("getting all scores, filtering and sorting"));const[i]=await(async(e,n,t)=>{t&&r.groupCollapsed("auction utils: getScores");const{scoreAd:o,score_ad:s}=await import(n.decision_logic_url);let a=o;return s&&(a=s),a||"function"==typeof a?e.map((e=>{let o;try{o=a(e?.ad,e?.bid,n,n?.trusted_scoring_signals,{top_window_hostname:window.top.location.hostname,interest_group_owner:e.owner,interest_group_name:e.name,bidding_duration_msec:e.duration}),t&&r.log(r.asInfo("score:"),o)}catch(e){t&&r.log(r.asAlert("There was an error in the 'scoreAd' function:")),t&&r.log(e),o=-1}return t&&r.groupEnd(),{bid:e,score:o}})).filter((({score:e})=>e>0)).sort(((e,n)=>e.score>n.score?1:-1)):(t&&r.log(r.asWarning("No 'scoreAd' function was found!")),null)})(a,e,n);if(n&&r.log(r.asInfo("winner:"),i),!i)return n&&r.log(r.asAlert("No winner found!")),n&&r.groupEnd(),null;n&&r.log(r.asProcess("creating an entry in the auction store"));const c=([1e7]+-1e3+-4e3+-8e3+-1e11).replace(/[018]/g,(e=>(e^crypto.getRandomValues(new Uint8Array(1))[0]&15>>e/4).toString(16)));return sessionStorage.setItem(c,JSON.stringify({origin:`${window.top.location.origin}${window.top.location.pathname}`,timestamp:Date.now(),conf:e,...i})),n&&r.log(r.asSuccess("auction token:"),c),n&&r.groupEnd(),c}const D=(e,n)=>`${e}-${n}`;async function k({data:e,ports:n}){try{if(!Array.isArray(e))throw new Error(`The API expects the data to be in the form of an array, with index 0 set to the action, and index 1 set to the data.  A ${typeof e} was passed instead.`);switch(e[0]){case"joinAdInterestGroup":{const[,n]=e,[t,o,s]=n;return await async function(e,n,t){t&&r.groupCollapsed("Fledge API: joinAdInterest");const o=await v.store.get(I,D(e.owner,e.name));let s;return t&&r.log(r.asInfo("checking for an existing interest group:"),o),o?(t&&r.log(r.asProcess("updating an interest group")),s=await v.store.put(I,o,{_expired:Date.now()+n,...e})):(t&&r.log(r.asProcess("creating a new interest group")),s=await v.store.add(I,{_key:D(e.owner,e.name),_expired:Date.now()+n,...e})),t&&r.log(r.asSuccess("interest group id:"),s),t&&r.groupEnd(),!0}(t,o,s),!0}case"leaveAdInterestGroup":{const[,n]=e,[t,o]=n;return await async function(e,n){return n&&r.groupCollapsed("Fledge API: leaveAdInterest"),n&&r.log(r.asProcess("deleting an existing interest group")),await v.store.delete(I,D(e.owner,e.name)),n&&r.log(r.asSuccess("interest group deleted")),n&&r.groupEnd(),!0}(t,o),!0}case"runAdAuction":{const[,t]=e,[o,r]=t;if(1!==n.length)throw new Error(`Port transfer mismatch during request: expected 1 port, but received ${n.length}`);const[s]=n,a=[!0,await x(o,r)];return s.postMessage(a),s.close(),!0}default:return!1}}catch(e){const t=[!1];for(const e of n)e.postMessage(t);throw e}}return async function(){const{searchParams:e}=new URL(window.location),n=e.get("debug")||!1;if(n&&r.group("Fledge: Storage Frame"),!(e.get("admin")||!1)){const[e]=window.location.ancestorOrigins;if(void 0===e)throw n&&r.log(r.asWarning("It appears your attempting to access this from the top-level document")),n&&r.log({origin:e,location:window.location}),new Error("Can't call 'postMessage' on the Frame window when run as a top-level document");const{port1:t,port2:o}=new MessageChannel;n&&r.log("message channel receiver:",t),n&&r.log("message channel sender:",o),t.onmessage=k,window.parent.postMessage({"fledge.polyfill":1},e,[o])}n&&r.groupEnd()}}();
