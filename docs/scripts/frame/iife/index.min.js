!function(){"use strict";const e=async(e,n,...t)=>{const[r,o]=await(i=import(e),i.then((e=>[e,void 0])).catch((e=>Promise.resolve([void 0,e]))));var i;if(o)return null;if(!r[n]||"function"!=typeof r[n])return null;try{return r[n](...t)}catch(e){return null}};function n(e){return new Promise(((n,t)=>{e.oncomplete=e.onsuccess=()=>n(e.result),e.onabort=e.onerror=()=>t(e.error)}))}function t(e,t){const r=indexedDB.open(e);r.onupgradeneeded=()=>r.result.createObjectStore(t);const o=n(r);return(e,n)=>o.then((r=>n(r.transaction(t,e).objectStore(t))))}let r;function o(){return r||(r=t("keyval-store","keyval")),r}function i(e=o()){const t=[];return function(e,t){return e("readonly",(e=>(e.openCursor().onsuccess=function(){this.result&&(t(this.result),this.result.continue())},n(e.transaction))))}(e,(e=>t.push([e.key,e.value]))).then((()=>t))}const s=t("fledge.v1","interest-groups"),a=(e,n)=>`${e}-${n}`;function c(e,t){const r=a(e.owner,e.name);return function(e,t=o()){return t("readonly",(t=>n(t.get(e))))}(r,s)?function(e,t,r=o()){return r("readwrite",(r=>new Promise(((o,i)=>{r.get(e).onsuccess=function(){try{r.put(t(this.result),e),o(n(r.transaction))}catch(e){i(e)}}}))))}(r,(n=>({...n,...e,_expired:Date.now()+t})),s):function(e,t,r=o()){return r("readwrite",(r=>(r.put(t,e),n(r.transaction))))}(r,{_created:Date.now(),_expired:Date.now()+t,_updated:Date.now(),...e},s)}const d=e=>function(e,t=o()){return t("readwrite",(t=>(t.delete(e),n(t.transaction))))}(a(e.owner,e.name),s),u=e=>e.then((e=>[e,void 0])).catch((e=>Promise.resolve([void 0,e]))),l=async(e,n,...t)=>{const[r,o]=await u(import(e));if(o)return null;if(!r[n]||"function"!=typeof r[n])return null;try{return r[n](...t)}catch(e){return null}},w=async(e,n)=>{if(!e||!n)return;const{hostname:t}=new URL(window.location.ancestorOrigins[0]),[r,o]=await u(fetch(`${e}?hostname=${t}&keys=${n.join(",")}`));if(o||!r.ok||!(e=>/\bapplication\/json\b/.test(e?.headers?.get("content-type")))(r))return null;const i=await r.json(),s={};for(const e in i)n.includes(e)&&(s[e]=i[e]);return s&&0!==Object.keys(s).length&&s.constructor===Object?s:null};async function p(e){const n=(await i(s)).flatMap((([e,n])=>n)).filter((n=>"*"!==e.interestGroupBuyers?e.interestGroupBuyers.includes(n.owner):n));if(!n||!Array.isArray(n)||0===n.length)return null;const t=await Promise.all(n.map((n=>(async(e,n)=>{const t=performance.now(),{hostname:r}=new URL(window.location.ancestorOrigins[0]),o=await w(e?.trustedBiddingSignalsUrl,e?.trustedBiddingSignalsKeys),i=await l(e.biddingLogicUrl,"generateBid",e,n?.auctionSignals,n?.perBuyerSignals?.[e.owner],o,{topWindowHostname:r,seller:n.seller});if(!(i.ad&&"object"==typeof i.ad&&i.bid&&"number"==typeof i.bid&&i.render)||"string"!=typeof i.render&&!Array.isArray(i.render))return!1;const s=performance.now();return{...e,...i,duration:s-t}})(n,e))).filter((e=>e)));if(!t.length)return null;const r=await(async(e,n)=>Promise.all(e.map((async e=>{let t;e.ad&&e.ad.length>0&&(t=e?.ad?.map((({renderUrl:e})=>e)));const r=await w(n?.trustedScoringSignalsUrl,t),{hostname:o}=new URL(window.location.ancestorOrigins[0]);return{bid:e,score:await l(n.decisionLogicUrl,"scoreAd",e?.ad,e?.bid,n,r,{topWindowHostname:o,interestGroupOwner:e.owner,interestGroupName:e.name,biddingDurationMsec:e.duration})}}))))(t,e),[o]=r.filter((({score:e})=>e>0)).sort(((e,n)=>e.score>n.score?1:-1));if(!o)return null;const a=([1e7]+-1e3+-4e3+-8e3+-1e11).replace(/[018]/g,(e=>(e^crypto.getRandomValues(new Uint8Array(1))[0]&15>>e/4).toString(16)));return sessionStorage.setItem(a,JSON.stringify({timestamp:Date.now(),conf:e,winner:o})),a}async function f({data:e,ports:n}){try{if(!Array.isArray(e))throw new Error(`The API expects the data to be in the form of an array, with index 0 set to the action, and index 1 set to the data.  A ${typeof e} was passed instead.`);switch(e[0]){case"joinAdInterestGroup":{const[,n]=e,[t,r]=n;return await c(t,r),!0}case"leaveAdInterestGroup":{const[,n]=e,[t]=n;return await d(t),!0}case"runAdAuction":{const[,t]=e,[r]=t;if(1!==n.length)throw new Error(`Port transfer mismatch during request: expected 1 port, but received ${n.length}`);const[o]=n,i=[!0,await p(r)];return o.postMessage(i),o.close(),!0}default:return!1}}catch(e){const t=[!1];for(const e of n)e.postMessage(t);throw e}}!function(){const[n]=window.location.ancestorOrigins;if(void 0===n)throw new Error("Can't call 'postMessage' on the Frame window when run as a top-level document");const{hash:t}=window.location;if(t){const{conf:r,winner:o}=JSON.parse(sessionStorage.getItem(t.substring(1))),{hostname:i}=new URL(n);if(!o)throw new Error(`A token was not found! Token provided: ${t}`);const s=window.document.createElement("iframe");s.src=o.bid.render,s.style["border-width"]=0,s.style.width=s.style.height=window.document.body.style.height=window.document.documentElement.style.height="100%",window.document.body.style.margin="0",window.document.body.appendChild(s),e(r.decisionLogicUrl,"reportResult",r,{topWindowHostname:i,interestGroupOwner:o.bid.owner,interestGroupName:o.bid.name,renderUrl:o.bid.render,bid:o.bid.bid}).then((n=>{e(o.bid.biddingLogicUrl,"reportWin",r?.auctionSignals,r?.perBuyerSignals?.[o.bid.owner],n,{topWindowHostname:i,interestGroupOwner:o.bid.owner,interestGroupName:o.bid.name,renderUrl:o.bid.render,bid:o.bid.bid})}))}else{const{port1:e,port2:t}=new MessageChannel;e.onmessage=f,window.parent.postMessage({"fledge.polyfill":1},n,[t])}}()}();
